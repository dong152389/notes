(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{1477:function(t,i,n){"use strict";n.r(i);var s=n(26),a=Object(s.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"项目的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目的生命周期"}},[t._v("#")]),t._v(" 项目的生命周期")]),t._v(" "),s("p",[t._v("Gradle 项目的生命周期分为三大阶段：Initialization -> Configuration -> Execution. 每个阶段都有自己的职责，具体如下")]),t._v(" "),s("p",[s("img",{attrs:{src:n(817),alt:""}})]),t._v(" "),s("p",[s("font",{attrs:{color:"blue"}},[t._v("Initialization 阶段")]),t._v("主要目的是初始化构建, 它又分为两个子过程")],1),t._v(" "),s("ul",[s("li",[t._v("一个是执行 Init Script")]),t._v(" "),s("li",[t._v("一个是执行 Setting Script")])]),t._v(" "),s("p",[s("font",{attrs:{color:"blue"}},[t._v("init.gradle")]),t._v(" 文件会在每个项目 build 之前被调用，用于做一些初始化的操作，它主要有如下作用")],1),t._v(" "),s("ul",[s("li",[t._v("配置内部的仓库信息（如公司的 maven 仓库信息）")]),t._v(" "),s("li",[t._v("配置一些全局属性")]),t._v(" "),s("li",[t._v("配置用户名及密码信息（如公司仓库的用户名和密码信息）")])]),t._v(" "),s("p",[s("font",{attrs:{color:"blue"}},[t._v("Setting Script ")]),t._v("则更重要, 它初始化了一次构建所参与的所有模块。")],1),t._v(" "),s("p",[s("font",{attrs:{color:"blue"}},[t._v("Configuration 阶段")]),t._v(' 这个阶段开始加载项目中所有模块的 Build Script。所谓 "加载" 就是执行 build.gradle 中的语句，根据脚本代码创建对应的 task ，最终根据所有 task 生成由 Task 组成的'),s("strong",[t._v("有向无环图(Directed Acyclic Graphs)")]),t._v("，如下:")],1),t._v(" "),s("p",[s("img",{attrs:{src:n(818),alt:""}})]),t._v(" "),s("p",[t._v("从而构成如下"),s("strong",[t._v("有向无环树")])]),t._v(" "),s("p",[s("img",{attrs:{src:n(819),alt:""}})]),t._v(" "),s("p",[s("font",{attrs:{color:"blue"}},[t._v("Execution ")]),t._v("阶段 这个阶段会根据上个阶段构建好的有向无环图，按着顺序执行 Task【Action 动作】。")],1)])}),[],!1,null,null,null);i.default=a.exports},817:function(t,i,n){t.exports=n.p+"assets/img/Snipaste_2022-09-01_09-06-08.7d254c9b.png"},818:function(t,i,n){t.exports=n.p+"assets/img/Snipaste_2022-09-01_09-15-16.52af5f49.png"},819:function(t,i,n){t.exports=n.p+"assets/img/Snipaste_2022-09-01_09-23-24.47c0f65e.png"}}]);