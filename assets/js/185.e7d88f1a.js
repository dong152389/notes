(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{1077:function(t,s,a){t.exports=a.p+"assets/img/Lusifer_20190602201826.b4242049.png"},1609:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"kubernetes-安装前的准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-安装前的准备"}},[t._v("#")]),t._v(" Kubernetes 安装前的准备")]),t._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),n("p",[t._v("本次安装采用 Ubuntu Server X64 18.04 LTS 版本安装 kubernetes 集群环境，集群节点为 1 主 2 从模式，此次对虚拟机会有些基本要求，如下：")]),t._v(" "),n("ul",[n("li",[t._v("OS：Ubuntu Server X64 18.04 LTS（16.04 版本步骤相同，再之前则不同）")]),t._v(" "),n("li",[t._v("CPU：最低要求，1 CPU 2 核")]),t._v(" "),n("li",[t._v("内存：最低要求，2GB")]),t._v(" "),n("li",[t._v("磁盘：最低要求，20GB")])]),t._v(" "),n("p",[t._v("创建三台虚拟机，分别命名如下：")]),t._v(" "),n("ul",[n("li",[t._v("Ubuntu Server 18.04 X64 Kubernetes Master \t192.168.25.141")]),t._v(" "),n("li",[t._v("Ubuntu Server 18.04 X64 Kubernetes Slave1      192.168.25.142")]),t._v(" "),n("li",[t._v("Ubuntu Server 18.04 X64 Kubernetes Slave2      192.168.25.143")])]),t._v(" "),n("h2",{attrs:{id:"配置网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置网络"}},[t._v("#")]),t._v(" 配置网络")]),t._v(" "),n("p",[t._v("当关机后再启动虚拟机有时 IP 地址会自动更换，导致之前的配置不可用；配置完 Kubernetes 网络后虚拟机还会出现无法联网的情况，后经研究发现是 DNS 会被自动重写所致，Ubuntu Server 18.04 LTS 版本的 IP 和 DNS 配置也与之前的版本配置大相径庭，故在此说明下如何修改 IP 和 DNS")]),t._v(" "),n("h3",{attrs:{id:"修改固定-ip"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改固定-ip"}},[t._v("#")]),t._v(" 修改固定 IP")]),t._v(" "),n("p",[t._v("编辑 "),n("code",[t._v("vi /etc/netplan/50-cloud-init.yaml")]),t._v(" 配置文件，注意这里的配置文件名未必和你机器上的相同，请根据实际情况修改。修改内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("network")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ethernets")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ens33")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("addresses")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("192.168.25.141/24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gateway4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.25.2\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nameservers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("addresses")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("192.168.25.2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),n("p",[t._v("使配置生效 "),n("code",[t._v("netplan apply")])]),t._v(" "),n("h3",{attrs:{id:"修改-dns"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改-dns"}},[t._v("#")]),t._v(" 修改 DNS")]),t._v(" "),n("h4",{attrs:{id:"方法一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法一"}},[t._v("#")]),t._v(" 方法一")]),t._v(" "),n("ul",[n("li",[t._v("停止 "),n("code",[t._v("systemd-resolved")]),t._v(" 服务："),n("code",[t._v("systemctl stop systemd-resolved")])]),t._v(" "),n("li",[t._v("修改 DNS："),n("code",[t._v("vi /etc/resolv.conf")]),t._v("，将 "),n("code",[t._v("nameserver")]),t._v(" 修改为如 "),n("code",[t._v("114.114.114.114")]),t._v(" 可以正常使用的 DNS 地址")])]),t._v(" "),n("h4",{attrs:{id:"方法二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法二"}},[t._v("#")]),t._v(" 方法二")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/systemd/resolved.conf\n")])])]),n("p",[t._v("把 DNS 取消注释，添加 DNS，保存退出，重启即可")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1077),alt:"img"}})]),t._v(" "),n("p",[t._v("对虚拟机系统的配置：")]),t._v(" "),n("ul",[n("li",[t._v("关闭交换空间："),n("code",[t._v("sudo swapoff -a")])]),t._v(" "),n("li",[t._v("避免开机启动交换空间：注释 "),n("code",[t._v("/etc/fstab")]),t._v(" 中的 "),n("code",[t._v("swap")])]),t._v(" "),n("li",[t._v("关闭防火墙："),n("code",[t._v("ufw disable")])])]),t._v(" "),n("h2",{attrs:{id:"使用-apt-安装-docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-apt-安装-docker"}},[t._v("#")]),t._v(" 使用 APT 安装 Docker")]),t._v(" "),n("h3",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#由于apt官方库里的docker版本可能比较旧，所以先卸载可能存在的旧版本：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" autoremove docker docker-ce docker-engine  docker.io  containerd runc\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果出现如下状况")]),t._v("\nE: Could not get lock /var/lib/dpkg/lock-frontend - "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(": Resource temporarily unavailable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nE: Unable to acquire the dpkg frontend lock "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/var/lib/dpkg/lock-frontend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", is another process using it?\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#说明有文件被锁定了")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除锁定文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" /var/lib/dpkg/lock-frontend       \n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" /var/lib/dpkg/lock\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#继续执行")]),t._v("\n\ndpkg -l "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" docker\n\ndpkg -l "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" ^rc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("}'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" dpkg -P "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除无用的相关的配置文件")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" autoremove docker-ce-*\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf /etc/systemd/system/docker.service.d\n \n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf /var/lib/docker\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#更新apt包索引：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装以下包以使apt可以通过HTTPS使用存储库（repository）：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y apt-transport-https ca-certificates "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" software-properties-common\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加Docker官方的GPG密钥：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://download.docker.com/linux/ubuntu/gpg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个时间点（2018.06.09），Ubuntu 18.04 LTS (Bionic Beaver) 对应的docker package is not available，所以只能通过下面的语句安装stable存储库")]),t._v("\n\nadd-apt-repository "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] https://download.docker.com/linux/ubuntu artful stable"')]),t._v(" \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不能使用下面的语句，我就踩了很多坑，很多博客都推荐下面的语句，这样就会导出docker-ce安装不上")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] https://download.docker.com/linux/ubuntu '),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' stable"')]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#再更新一下apt包索引：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里安装的最新版，其实是安装你电脑上可用的最新版，查看系统可用的版本：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-cache")]),t._v(" madison docker-ce\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#选择要安装的docker18.06.3-ce，通过上面命令查询出来")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.06")]),t._v(".3~ce~3-0~ubuntu\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#验证docker")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看docker服务是否启动：")]),t._v("\n\nsystemctl status docker\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#若未启动，则启动docker服务：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" docker\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start docker\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#测试经典的hello world：")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker run hello-world\n")])])]),n("h3",{attrs:{id:"验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker version\nClient:\n Version:           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.06")]),t._v(".3-ce\n API version:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.38")]),t._v("\n Go version:        go1.10.3\n Git commit:        d7080c1\n Built:             Wed Feb "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" 02:28:10 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("\n OS/Arch:           linux/amd64\n Experimental:      "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\nServer:\n Engine:\n  Version:          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.06")]),t._v(".3-ce\n  API version:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.38")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minimum version "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Go version:       go1.10.3\n  Git commit:       d7080c1\n  Built:            Wed Feb "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" 02:26:34 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("\n  OS/Arch:          linux/amd64\n  Experimental:     "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),n("h3",{attrs:{id:"配置加速器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置加速器"}},[t._v("#")]),t._v(" 配置加速器")]),t._v(" "),n("p",[t._v("对于使用 "),n("strong",[t._v("systemd")]),t._v(" 的系统，请在 "),n("code",[t._v("/etc/docker/daemon.json")]),t._v(" 中写入如下内容（如果文件不存在请新建该文件）")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://registry.docker-cn.com"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("注意，一定要保证该文件符合 JSON 规范，否则 Docker 将不能启动。")])]),t._v(" "),n("p",[t._v("验证加速器是否配置成功：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart docker\ndocker info\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 出现如下语句即表示配置成功")]),t._v("\nRegistry Mirrors:\n https://registry.docker-cn.com/\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),n("h2",{attrs:{id:"修改主机名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改主机名"}},[t._v("#")]),t._v(" 修改主机名")]),t._v(" "),n("p",[t._v("在同一局域网中主机名不应该相同，所以我们需要做修改，下列操作步骤为修改 "),n("strong",[t._v("18.04")]),t._v(" 版本的 Hostname，如果是 16.04 或以下版本则直接修改 "),n("code",[t._v("/etc/hostname")]),t._v(" 里的名称即可")]),t._v(" "),n("p",[n("strong",[t._v("查看当前 Hostname")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前主机名")]),t._v("\nhostnamectl\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示如下内容")]),t._v("\n   Static hostname: ubuntu\n         Icon name: computer-vm\n           Chassis: vm\n        Machine ID: 33011e0a95094672b99a198eff07f652\n           Boot ID: dc856039f0d24164a9f8a50c506be96d\n    Virtualization: vmware\n  Operating System: Ubuntu "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),t._v(".2 LTS\n            Kernel: Linux "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.15")]),t._v(".0-48-generic\n      Architecture: x86-64\n")])])]),n("p",[n("strong",[t._v("修改 Hostname")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 hostnamectl 命令修改，其中 kubernetes-master 为新的主机名")]),t._v("\nhostnamectl set-hostname kubernetes-master\n")])])]),n("p",[n("strong",[t._v("修改 cloud.cfg")])]),t._v(" "),n("p",[t._v("如果 "),n("code",[t._v("cloud-init package")]),t._v(" 安装了，需要修改 "),n("code",[t._v("cloud.cfg")]),t._v(" 文件。该软件包通常缺省安装用于处理 cloud")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有该文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/cloud/cloud.cfg\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该配置默认为 false，修改为 true 即可")]),t._v("\npreserve_hostname: "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),n("p",[n("strong",[t._v("验证")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("root@kubernetes-master:~"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hostnamectl")]),t._v("\n   Static hostname: kubernetes-master\n         Icon name: computer-vm\n           Chassis: vm\n        Machine ID: 33011e0a95094672b99a198eff07f652\n           Boot ID: 8c0fd75d08c644abaad3df565e6e4cbd\n    Virtualization: vmware\n  Operating System: Ubuntu "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),t._v(".2 LTS\n            Kernel: Linux "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.15")]),t._v(".0-48-generic\n      Architecture: x86-64\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);