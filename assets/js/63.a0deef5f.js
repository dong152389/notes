(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{1462:function(t,s,a){"use strict";a.r(s);var n=a(26),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"groovy-基本语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#groovy-基本语法"}},[t._v("#")]),t._v(" Groovy 基本语法")]),t._v(" "),n("p",[n("img",{attrs:{src:a(320),alt:""}})]),t._v(" "),n("ul",[n("li",[t._v("类型转换：当需要时，类型之间会自动发生类型转换：字符串（String）、基本类型(如 int) 和类型的包装类 (如 Integer) 。")]),t._v(" "),n("li",[t._v("类说明：如果在一个 groovy 文件中没有任何类定义，它将被当做 script 来处理，也就意味着这个文件将被透明的转换为一个 Script类型的类，这个自动转换得到的类将使用原始的 groovy 文件名作为类的名字。groovy 文件的内容被打包进run 方法，另外在新产生的类中被加入一个 main 方法以进行外部执行该脚本。")])]),t._v(" "),n("h2",{attrs:{id:"注意点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[t._v("#")]),t._v(" 注意点")]),t._v(" "),n("p",[n("img",{attrs:{src:a(321),alt:""}})]),t._v(" "),n("p",[t._v("提示:方法调用时,在不含有歧义的地方可以省略方法调用时的括号。这类似于使用${变量名}时，括号在不引起歧义的地方可以省略是一样的：如")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" num1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" num2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprintln "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("num1")]),t._v(" + "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("num2")]),t._v(" = "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("num2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n")])])]),n("h2",{attrs:{id:"引号说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引号说明"}},[t._v("#")]),t._v(" 引号说明")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groovy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--------------------------------字符串----------------------------------------")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" desc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"测试"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'单引号,不支持变量引用，不支持换行操作 ${desc}'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" str2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"双引号,支持变量引用，不支持换行操作 '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("desc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" str3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'''模板字符串,不支持变量引用，支持换\n                  行操作 ${desc}'''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基本数据类型也可以作为对象使用,可以调用对象的方法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(322),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"三个语句结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三个语句结构"}},[t._v("#")]),t._v(" 三个语句结构")]),t._v(" "),n("p",[t._v("Groovy 支持顺序结构从上向下依次解析、分支结构(if..else、if..else if ..else..、switch..case、for、while、do..while)\n具体参考官网："),n("a",{attrs:{href:"http://www.groovy-lang.org/semantics.html#_conditional_structures",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Apache Groovy programming language - Semantics (groovy-lang.org)"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"类型及权限修饰符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型及权限修饰符"}},[t._v("#")]),t._v(" 类型及权限修饰符")]),t._v(" "),n("ol",[n("li",[t._v("原生数据类型及包装类")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(323),alt:"原始类型包装类"}})]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("类、内部类、抽象类、接口")]),t._v(" "),n("li",[t._v("注解")]),t._v(" "),n("li",[t._v("Trait: 可以看成是带有方法实现的接口")])]),t._v(" "),n("p",[n("font",{attrs:{color:"blue"}},[t._v("权限修饰符: public、protected、private")])],1),t._v(" "),n("blockquote",[n("p",[n("font",{attrs:{color:"red"}},[t._v("Groovy 类与 Java 类之间的主要区别是:")])],1),t._v(" "),n("ol",[n("li",[t._v("没有可见性修饰符的类或方法自动是公共的(可以使用一个特殊的注释来实现包的私有可见性)。")]),t._v(" "),n("li",[t._v("没有可见性修饰符的字段将自动转换为属性，不需要显式的 getter 和 setter 方法。")]),t._v(" "),n("li",[t._v("如果属性声明为 final，则不会生成 setter。")]),t._v(" "),n("li",[t._v("一个源文件可能包含一个或多个类(但是如果一个文件不包含类定义的代码，则将其视为脚本)。脚本只是具有一些特殊约定的类,它们的名称与源文件相同(所以不要在脚本中包含与脚本源文件名相同的类定义)。")])]),t._v(" "),n("p",[t._v("有关 Groovy 中 各 种 各 样 的 数 据 类 型 和 权 限 修 饰 符 及 Goovy 与 Java 区 别 请 参 考：")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://www.groovy-lang.org/objectorientation.html#_modifiers_on_a_property",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性的修饰符"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"集合操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#集合操作"}},[t._v("#")]),t._v(" 集合操作")]),t._v(" "),n("p",[t._v("Groovy 支持 List、Map 集合操作，并且拓展了 Java 中的 API,具体参考如下方法：")]),t._v(" "),n("ul",[n("li",[t._v("List:\n"),n("ul",[n("li",[t._v("add():添加某个元素")]),t._v(" "),n("li",[t._v("plus():添加某个 list 集合")]),t._v(" "),n("li",[t._v("remove():删除指定下标的元素")]),t._v(" "),n("li",[t._v("removeElement():删除某个指定的元素")]),t._v(" "),n("li",[t._v("removeAll(): 移除某个集合中的元素")]),t._v(" "),n("li",[t._v("pop():弹出 list 集合中最后一个元素")]),t._v(" "),n("li",[t._v("putAt():修改指定下标的元素")]),t._v(" "),n("li",[t._v("each():遍历")]),t._v(" "),n("li",[t._v("size(): 获取 list 列表中元素的个数")]),t._v(" "),n("li",[t._v("contains(): 判断列表中是否包含指定的值，则返回 true")])])]),t._v(" "),n("li",[t._v("Map:\n"),n("ul",[n("li",[t._v("put():向 map 中添加元素")]),t._v(" "),n("li",[t._v("remove():根据某个键做移除，或者移除某个键值对")]),t._v(" "),n("li",[t._v("+、-：支持 map 集合的加减操作")]),t._v(" "),n("li",[t._v("each():遍历 map 集合")])])])]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"http://www.groovy-lang.org/syntax.html#_number_type_suffixes",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Apache Groovy programming language - Syntax (groovy-lang.org)"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("可以把不同的基本类型添加到同一集合中.")])]),t._v(" "),n("h2",{attrs:{id:"类导入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类导入"}},[t._v("#")]),t._v(" 类导入")]),t._v(" "),n("p",[t._v("Groovy 遵循 Java 允许 import 语句解析类引用的概念 。")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MarkupBuilder\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" xml "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MarkupBuilder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" xml "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null\n")])])]),n("p",[t._v("Groovy 语言默认提供的导入 。")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" groovy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BigInteger\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BigDecimal\n")])])]),n("p",[t._v("这样做是因为这些包中的类最常用。通过导入这些样板代码减少了。")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://www.groovy-lang.org/structure.html#_imports",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Apache Groovy programming language - Program structure (groovy-lang.org)"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"异常处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[t._v("#")]),t._v(" 异常处理")]),t._v(" "),n("p",[t._v("Groovy 中的异常处理和 java 中的异常处理是一样的。")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" z\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" j\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        z "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reached here'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ArithmeticException\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" z "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reached here'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("a",{attrs:{href:"http://www.groovy-lang.org/semantics.html#_try_catch_finally",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Apache Groovy programming language - Semantics (groovy-lang.org)"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("闭包：Groovy 中的闭包是一个开放的、匿名的代码块，它可以接受参数、也可以有返回值。闭包可以引用其周围作用域中声明的变量。")])]),t._v(" "),n("li",[n("p",[t._v("语法：{ [closureParameters -> ] statements }")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("其中[ closureParameters-> ]是一个可选的逗号分隔的参数列表,参数后面是 Groovy 语句。参数类似于方法参数列表，这些参数可以是类型化的,也可以是非类型化的。当指定参数列表时，需要使用-> 字符，用于将参数与闭包体分离。")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"http://www.groovy-lang.org/closures.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Apache Groovy programming language - Closures (groovy-lang.org)"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包体完成变量自增操作")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" item"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包使用 空参数列表 明确规定这是无参的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" item"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包中有一个默认的参数[it]，写不写无所谓")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" println it "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" it "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" println it "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果不想使用默认的闭包参数it,那需要显示自定义参数的名称")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" println name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包也可以接受多个参数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" String x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n    println "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"hey '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" the value is "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包参数也可是一个对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" reader "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" line "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("闭包调用方式： 闭包是 groovy.lang.Closure 的实例。它可以像任何其他变量一样分配给一个变量或字段 。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("闭包对象(参数)")])]),t._v(" "),n("li",[n("p",[t._v("闭包对象.call(参数)")])]),t._v(" "),n("li",[n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" isOdd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isOdd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" isOdd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" isEven "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" it"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEven")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" isEven"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])])]),t._v(" "),n("li",[n("blockquote",[n("p",[t._v("特殊说明： 可以把闭包当作一个对象，作为参数传递给方法使用")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*====================================================\n闭包：\n  定义：是一个开放的、匿名的代码块，它可以接受参数、也可以有返回值。闭包可以引用其周围作用域中声明的变量。\n  语法：{ [closureParameters -> ] statements }\n  调用：\n      第一步：将闭包赋值给一个变量\n      第二步: 变量名()、变量名.call()\n\n  闭包在实际开发中的使用：作为方法的参数使用\n======================================================*/")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("running")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Closure closure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"running start..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("closure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"running end..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("running")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"running........"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("caculate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Closure closure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" num1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" num2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("closure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包作为方法的最后一个参数，那么闭包可以写在方法外边")]),t._v("\ncaculate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("k")]),t._v(" + "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("v")]),t._v(" = "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])])])])}),[],!1,null,null,null);s.default=r.exports},320:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2022-08-29_15-54-06.9418e279.png"},321:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2022-08-30_13-58-11.e1eb3cc8.png"},322:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2022-08-30_14-09-25.da476096.png"},323:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2022-08-30_14-17-03.18a74154.png"}}]);