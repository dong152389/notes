(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{1130:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114033410.bfd7610e.png"},1131:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114034146.c5913c44.png"},1132:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114034730.e21b2402.png"},1133:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114035643.492dad7b.png"},1134:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114035917.045c59e0.png"},1135:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114040024.32142808.png"},1136:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114040606.dd90d221.png"},1137:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114040953.5aa59270.png"},1138:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114041036.04e26a52.png"},1139:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114042528.b73ee00a.png"},1140:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114042645.01ff5567.png"},1141:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_20190114043403.209f6710.png"},1142:function(a,t,s){a.exports=s.p+"assets/img/Lusifer_2019011404350001.2ad2a8f0.png"},1674:function(a,t,s){"use strict";s.r(t);var e=s(26),v=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"skywalking-客户端配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#skywalking-客户端配置"}},[a._v("#")]),a._v(" SkyWalking 客户端配置")]),a._v(" "),e("h2",{attrs:{id:"java-agent-服务器探针"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-agent-服务器探针"}},[a._v("#")]),a._v(" Java Agent 服务器探针")]),a._v(" "),e("p",[a._v("参考官网给出的帮助 "),e("a",{attrs:{href:"https://github.com/apache/incubator-skywalking/blob/master/docs/en/setup/service-agent/java-agent/README.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("Setup java agent"),e("OutboundLink")],1),a._v("，我们需要使用官方提供的探针为我们达到监控的目的，按照实际情况我们需要实现三种部署方式")]),a._v(" "),e("ul",[e("li",[a._v("IDEA 部署探针")]),a._v(" "),e("li",[a._v("Java 启动方式部署探针（我们是 Spring Boot 应用程序，需要使用 "),e("code",[a._v("java -jar")]),a._v(" 的方式启动应用）")]),a._v(" "),e("li",[a._v("Docker 启动方式部署探针（需要做到一次构建到处运行的持续集成效果，本章节暂不提供解决方案，到后面的实战环节再实现）")])]),a._v(" "),e("p",[a._v("探针文件在 "),e("code",[a._v("apache-skywalking-apm-incubating/agent")]),a._v(" 目录下")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1130),alt:"img"}})]),a._v(" "),e("h2",{attrs:{id:"idea-部署探针"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#idea-部署探针"}},[a._v("#")]),a._v(" IDEA 部署探针")]),a._v(" "),e("p",[a._v("继续之前的案例项目，创建一个名为 "),e("code",[a._v("hello-spring-cloud-external-skywalking")]),a._v(" 的目录，并将 "),e("code",[a._v("agent")]),a._v(" 整个目录拷贝进来")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1131),alt:"img"}})]),a._v(" "),e("p",[a._v("修改项目的 VM 运行参数，点击菜单栏中的 "),e("code",[a._v("Run")]),a._v(" -> "),e("code",[a._v("EditConfigurations...")]),a._v("，此处我们以 "),e("code",[a._v("nacos-provider")]),a._v(" 项目为例，修改参数如下")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("-javaagent:D:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Workspace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Others"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("hello-spring-cloud-alibaba"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("hello-spring-cloud-external-skywalking"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("skywalking-agent.jar\n-Dskywalking.agent.service_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("nacos-provider\n-Dskywalking.collector.backend_service"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("localhost:11800\n")])])]),e("p",[e("img",{attrs:{src:s(1132),alt:"img"}})]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-javaagent")]),a._v("：用于指定探针路径")]),a._v(" "),e("li",[e("code",[a._v("-Dskywalking.agent.service_name")]),a._v("：用于重写 "),e("code",[a._v("agent/config/agent.config")]),a._v(" 配置文件中的服务名")]),a._v(" "),e("li",[e("code",[a._v("-Dskywalking.collector.backend_service")]),a._v("：用于重写 "),e("code",[a._v("agent/config/agent.config")]),a._v(" 配置文件中的服务地址")])]),a._v(" "),e("h2",{attrs:{id:"java-启动方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-启动方式"}},[a._v("#")]),a._v(" Java 启动方式")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("java -javaagent:/path/to/skywalking-agent/skywalking-agent.jar -Dskywalking.agent.service_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("nacos-provider -Dskywalking.collector.backend_service"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("localhost:11800 -jar yourApp.jar\n")])])]),e("h2",{attrs:{id:"测试监控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试监控"}},[a._v("#")]),a._v(" 测试监控")]),a._v(" "),e("p",[a._v("启动 "),e("code",[a._v("nacos-provider")]),a._v(" 项目，通过观察日志可以发现，已经成功加载探针")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1133),alt:"img"}})]),a._v(" "),e("p",[a._v("访问之前写好的接口 http://localhost:8081/echo/hi 之后再刷新 SkyWalking Web UI，你会发现 Service 与 Endpoint 已经成功检测到了")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1134),alt:"img"}})]),a._v(" "),e("p",[e("img",{attrs:{src:s(1135),alt:"img"}})]),a._v(" "),e("p",[a._v("至此，表示 SkyWalking 链路追踪配置成功")]),a._v(" "),e("h2",{attrs:{id:"skywalking-trace-监控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#skywalking-trace-监控"}},[a._v("#")]),a._v(" SkyWalking Trace 监控")]),a._v(" "),e("p",[a._v("SkyWalking 通过业务调用监控进行依赖分析，提供给我们了服务之间的服务调用拓扑关系、以及针对每个 Endpoint 的 Trace 记录。")]),a._v(" "),e("h3",{attrs:{id:"调用链路监控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用链路监控"}},[a._v("#")]),a._v(" 调用链路监控")]),a._v(" "),e("p",[a._v("点击 "),e("code",[a._v("Trace")]),a._v(" 菜单，进入追踪页")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1136),alt:"img"}})]),a._v(" "),e("p",[a._v("点击 "),e("code",[a._v("Trace ID")]),a._v(" 展开详细信息")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1137),alt:"img"}})]),a._v(" "),e("p",[e("img",{attrs:{src:s(1138),alt:"img"}})]),a._v(" "),e("p",[a._v("上图展示了一次正常的响应，总响应时间为 "),e("code",[a._v("185ms")]),a._v(" 共有一个 Span（基本工作单元，表示一次完整的请求，包含响应，即请求并响应）")]),a._v(" "),e("p",[a._v("Span "),e("code",[a._v("/echo/{message}")]),a._v(" 说明如下：")]),a._v(" "),e("ul",[e("li",[a._v("Duration：响应时间 185 毫秒")]),a._v(" "),e("li",[a._v("component：组件类型为 SpringMVC")]),a._v(" "),e("li",[a._v("url：请求地址")]),a._v(" "),e("li",[a._v("http.method：请求类型")])]),a._v(" "),e("h3",{attrs:{id:"服务性能指标监控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务性能指标监控"}},[a._v("#")]),a._v(" 服务性能指标监控")]),a._v(" "),e("p",[a._v("点击 "),e("code",[a._v("Service")]),a._v(" 菜单，进入服务性能指标监控页")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1139),alt:"img"}})]),a._v(" "),e("p",[a._v("选择希望监控的服务")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1140),alt:"img"}})]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("Avg SLA：")]),a._v(" 服务可用性（主要是通过请求成功与失败次数来计算）")]),a._v(" "),e("li",[e("strong",[a._v("CPM：")]),a._v(" 每分钟调用次数")]),a._v(" "),e("li",[e("strong",[a._v("Avg Response Time：")]),a._v(" 平均响应时间")])]),a._v(" "),e("p",[a._v("点击 "),e("code",[a._v("More Server Details...")]),a._v(" 还可以查看详细信息")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1141),alt:"img"}})]),a._v(" "),e("p",[e("img",{attrs:{src:s(1142),alt:"img"}})]),a._v(" "),e("p",[a._v("上图中展示了服务在一定时间范围内的相关数据，包括：")]),a._v(" "),e("ul",[e("li",[a._v("服务可用性指标 SLA")]),a._v(" "),e("li",[a._v("每分钟平均响应数")]),a._v(" "),e("li",[a._v("平均响应时间")]),a._v(" "),e("li",[a._v("服务进程 PID")]),a._v(" "),e("li",[a._v("服务所在物理机的 IP、Host、OS")]),a._v(" "),e("li",[a._v("运行时 CPU 使用率")]),a._v(" "),e("li",[a._v("运行时堆内存使用率")]),a._v(" "),e("li",[a._v("运行时非堆内存使用率")]),a._v(" "),e("li",[a._v("GC 情况")])])])}),[],!1,null,null,null);t.default=v.exports}}]);