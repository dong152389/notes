(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{1069:function(t,s,a){t.exports=a.p+"assets/img/2019060601200001.0d6a711b.png"},1070:function(t,s,a){t.exports=a.p+"assets/img/2019060601200002.9ab3653e.png"},1071:function(t,s,a){t.exports=a.p+"assets/img/2019060601200003.d795a82f.png"},1072:function(t,s,a){t.exports=a.p+"assets/img/2019060601200004.8320ad58.png"},1604:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"ingress-统一访问入口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ingress-统一访问入口"}},[t._v("#")]),t._v(" Ingress 统一访问入口")]),t._v(" "),n("h2",{attrs:{id:"术语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[t._v("#")]),t._v(" 术语")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("节点：")]),t._v(" Kubernetes 集群中的服务器")]),t._v(" "),n("li",[n("strong",[t._v("集群：")]),t._v(" Kubernetes 管理的一组服务器集合")]),t._v(" "),n("li",[n("strong",[t._v("边界路由器：")]),t._v(" 为局域网和 Internet 路由数据包的路由器，执行防火墙保护局域网络")]),t._v(" "),n("li",[n("strong",[t._v("集群网络：")]),t._v(" 遵循 Kubernetes 网络模型实现集群内的通信的具体实现，比如 Flannel 和 Calico")]),t._v(" "),n("li",[n("strong",[t._v("服务：")]),t._v(" Kubernetes 的服务 (Service) 是使用标签选择器标识的一组 Pod Service (Deployment)。 "),n("strong",[t._v("除非另有说明，否则服务的虚拟 IP 仅可在集群内部访问")])])]),t._v(" "),n("h2",{attrs:{id:"内部访问方式-clusterip"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内部访问方式-clusterip"}},[t._v("#")]),t._v(" 内部访问方式 ClusterIP")]),t._v(" "),n("p",[t._v("ClusterIP 服务是 Kubernetes 的默认服务。它给你一个集群内的服务，集群内的其它应用都可以访问该服务。集群外部无法访问它。在某些场景下我们可以使用 Kubernetes 的 Proxy 模式来访问服务，比如调试服务时。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1069),alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"三种外部访问方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三种外部访问方式"}},[t._v("#")]),t._v(" 三种外部访问方式")]),t._v(" "),n("h3",{attrs:{id:"nodeport"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nodeport"}},[t._v("#")]),t._v(" NodePort")]),t._v(" "),n("p",[t._v("NodePort 服务是引导外部流量到你的服务的最原始方式。NodePort，正如这个名字所示，"),n("strong",[t._v("在所有节点（虚拟机）上开放一个特定端口")]),t._v("，任何发送到该端口的流量都被转发到对应服务。")]),t._v(" "),n("p",[t._v("NodePort 服务特征如下：")]),t._v(" "),n("ul",[n("li",[t._v("每个端口只能是一种服务")]),t._v(" "),n("li",[t._v("端口范围只能是 30000-32767（可调）")]),t._v(" "),n("li",[t._v("不在 YAML 配置文件中指定则会分配一个默认端口")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("建议：")]),t._v(" 不要在生产环境中使用这种方式暴露服务，大多数时候我们应该让 Kubernetes 来选择端口")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(1070),alt:"img"}})]),t._v(" "),n("h3",{attrs:{id:"loadbalancer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loadbalancer"}},[t._v("#")]),t._v(" LoadBalancer")]),t._v(" "),n("p",[t._v("LoadBalancer 服务是暴露服务到 Internet 的标准方式。所有通往你指定的端口的流量都会被转发到对应的服务。它没有过滤条件，没有路由等。这意味着你几乎可以发送任何种类的流量到该服务，像 HTTP，TCP，UDP，WebSocket，gRPC 或其它任意种类。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1071),alt:"img"}})]),t._v(" "),n("h3",{attrs:{id:"ingress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ingress"}},[t._v("#")]),t._v(" Ingress")]),t._v(" "),n("p",[t._v("Ingress 事实上不是一种服务类型。相反，它处于多个服务的前端，扮演着 “智能路由” 或者集群入口的角色。你可以用 Ingress 来做许多不同的事情，各种不同类型的 Ingress 控制器也有不同的能力。它允许你基于路径或者子域名来路由流量到后端服务。")]),t._v(" "),n("p",[t._v("Ingress 可能是暴露服务的最强大方式，但同时也是最复杂的。Ingress 控制器有各种类型，包括 Google Cloud Load Balancer， Nginx，Contour，Istio，等等。它还有各种插件，比如 cert-manager (它可以为你的服务自动提供 SSL 证书)/")]),t._v(" "),n("p",[t._v("如果你想要使用同一个 IP 暴露多个服务，这些服务都是使用相同的七层协议（典型如 HTTP），你还可以获取各种开箱即用的特性（比如 SSL、认证、路由等等）")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1072),alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"什么是-ingress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-ingress"}},[t._v("#")]),t._v(" 什么是 Ingress")]),t._v(" "),n("p",[t._v("通常情况下，Service 和 Pod 的 IP 仅可在集群内部访问。集群外部的请求需要通过负载均衡转发到 Service 在 Node 上暴露的 NodePort 上，然后再由 kube-proxy 通过边缘路由器 (edge router) 将其转发给相关的 Pod 或者丢弃。而 Ingress 就是为进入集群的请求提供路由规则的集合")]),t._v(" "),n("p",[t._v("Ingress 可以给 Service 提供集群外部访问的 URL、负载均衡、SSL 终止、HTTP 路由等。为了配置这些 Ingress 规则，集群管理员需要部署一个 Ingress Controller，它监听 Ingress 和 Service 的变化，并根据规则配置负载均衡并提供访问入口。")]),t._v(" "),n("h2",{attrs:{id:"使用-nginx-ingress-controller"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-nginx-ingress-controller"}},[t._v("#")]),t._v(" 使用 Nginx Ingress Controller")]),t._v(" "),n("p",[t._v("本次实践的主要目的就是将入口统一，不再通过 LoadBalancer 等方式将端口暴露出来，而是使用 Ingress 提供的反向代理负载均衡功能作为我们的唯一入口。通过以下步骤操作仔细体会。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("注意：")]),t._v(" 下面包含资源配置的步骤都是自行创建 YAML 配置文件通过 "),n("code",[t._v("kubectl create -f <YAML>")]),t._v(" 和 "),n("code",[t._v("kubectl delete -f <YAML>")]),t._v(" 部署和删除")])]),t._v(" "),n("h3",{attrs:{id:"部署-tomcat"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署-tomcat"}},[t._v("#")]),t._v(" 部署 Tomcat")]),t._v(" "),n("p",[t._v("部署 Tomcat 但仅允许在内网访问，我们要通过 Ingress 提供的反向代理功能路由到 Tomcat 之上")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("http\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ClusterIP, NodePort, LoadBalancer")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" LoadBalancer\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n")])])]),n("h3",{attrs:{id:"安装-nginx-ingress-controller"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-nginx-ingress-controller"}},[t._v("#")]),t._v(" 安装 Nginx Ingress Controller")]),t._v(" "),n("p",[t._v("Ingress Controller 有许多种，我们选择最熟悉的 Nginx 来处理请求，其它可以参考 "),n("a",{attrs:{href:"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[t._v("下载 Nginx Ingress Controller 配置文件")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml\n")])])]),n("ul",[n("li",[t._v("修改配置文件，找到配置如下位置 (搜索 "),n("code",[t._v("serviceAccountName")]),t._v(") 在下面增加一句 "),n("code",[t._v("hostNetwork: true")])])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("controller\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/part-of")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以部署多个实例")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/part-of")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/part-of")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prometheus.io/port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10254"')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prometheus.io/scrape")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceAccountName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("serviceaccount\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加 hostNetwork: true，意思是开启主机网络模式，暴露 Nginx 服务端口 80")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostNetwork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("controller\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quay.io/kubernetes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("controller/nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("controller"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.24.1\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("controller\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("configmap=$(POD_NAMESPACE)/nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("configuration\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tcp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("services"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("configmap=$(POD_NAMESPACE)/tcp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("services\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("udp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("services"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("configmap=$(POD_NAMESPACE)/udp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("services\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("publish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service=$(POD_NAMESPACE)/ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n// 以下代码省略"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),n("h3",{attrs:{id:"部署-ingress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署-ingress"}},[t._v("#")]),t._v(" 部署 Ingress")]),t._v(" "),n("p",[t._v("Ingress 翻译过来是入口的意思，说白了就是个 API 网关（想想之前学的 Zuul 和 Spring Cloud Gateway）")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("web\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定 Ingress Controller 的类型")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetes.io/ingress.class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定我们的 rules 的 path 可以使用正则表达式")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx.ingress.kubernetes.io/use-regex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接超时时间，默认为 5s")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx.ingress.kubernetes.io/proxy-connect-timeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"600"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后端服务器回转数据超时时间，默认为 60s")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx.ingress.kubernetes.io/proxy-send-timeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"600"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后端服务器响应超时时间，默认为 60s")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx.ingress.kubernetes.io/proxy-read-timeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"600"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端上传文件，最大大小，默认为 20m")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx.ingress.kubernetes.io/proxy-body-size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10m"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# URL 重写")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx.ingress.kubernetes.io/rewrite-target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由规则")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主机名，只能是域名，修改为你自己的")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.test.com\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后台部署的 Service Name，与上面部署的 Tomcat 对应")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("http\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后台部署的 Service Port，与上面部署的 Tomcat 对应")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),n("h2",{attrs:{id:"验证是否成功"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证是否成功"}},[t._v("#")]),t._v(" 验证是否成功")]),t._v(" "),n("h3",{attrs:{id:"查看-tomcat"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看-tomcat"}},[t._v("#")]),t._v(" 查看 Tomcat")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("kubectl get deployment\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出如下")]),t._v("\nNAME         READY   UP-TO-DATE   AVAILABLE   AGE\ntomcat-app   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("           88m\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("kubectl get "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出如下")]),t._v("\nNAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    AGE\nkubernetes    ClusterIP   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.1       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("/TCP    2d5h\ntomcat-http   ClusterIP   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.97")]),t._v(".222.179   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("/TCP   89m\n")])])]),n("h3",{attrs:{id:"查看-nginx-ingress-controller"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看-nginx-ingress-controller"}},[t._v("#")]),t._v(" 查看 Nginx Ingress Controller")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("kubectl get pods -n ingress-nginx -o wide\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出如下，注意下面的 IP 地址，就是我们实际访问地址")]),t._v("\nNAME                                        READY   STATUS    RESTARTS   AGE   IP                NODE                 NOMINATED NODE   READINESS GATES\nnginx-ingress-controller-76f9fddcf8-vzkm5   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          61m   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".141.160   kubernetes-node-01   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("h3",{attrs:{id:"查看-ingress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看-ingress"}},[t._v("#")]),t._v(" 查看 Ingress")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("kubectl get ingress\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出如下")]),t._v("\nNAME        HOSTS          ADDRESS   PORTS   AGE\nnginx-web   k8s.test.com             "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("      61m\n")])])]),n("h3",{attrs:{id:"测试访问"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试访问"}},[t._v("#")]),t._v(" 测试访问")]),t._v(" "),n("p",[t._v("成功代理到 Tomcat 即表示成功")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不设置 Hosts 的方式请求地址，下面的 IP 和 Host 均在上面有配置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -v http://192.168.141.160 -H "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'host: k8s.test.com'")]),t._v("\n")])])]),n("h3",{attrs:{id:"扩展阅读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读"}},[t._v("#")]),t._v(" 扩展阅读")]),t._v(" "),n("h4",{attrs:{id:"解决无法下载-quay-io-地址镜像的问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决无法下载-quay-io-地址镜像的问题"}},[t._v("#")]),t._v(" 解决无法下载 quay.io 地址镜像的问题")]),t._v(" "),n("p",[t._v("在实际操作中我们需要拉取 Nginx Ingress 镜像，默认地址为："),n("code",[t._v("quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1")]),t._v("，由于国内网络等原因，可能无法正常拉取该镜像，此时我们可以使用 Azure 提供的镜像加速器，将 "),n("code",[t._v("quay.io")]),t._v(" 替换为 "),n("code",[t._v("quay.azk8s.cn")]),t._v("，其它类似地址的镜像无法下载均可尝试使用该方式解决，替换后的地址如："),n("code",[t._v("quay.azk8s.cn/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1")])])])}),[],!1,null,null,null);s.default=e.exports}}]);