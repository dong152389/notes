(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{1586:function(a,t,s){"use strict";s.r(t);var r=s(26),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"nosql-数据库简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nosql-数据库简介"}},[a._v("#")]),a._v(" NoSQL 数据库简介")]),a._v(" "),r("h2",{attrs:{id:"技术发展"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术发展"}},[a._v("#")]),a._v(" 技术发展")]),a._v(" "),r("p",[a._v("技术的分类")]),a._v(" "),r("ul",[r("li",[a._v("解决功能性的问题：Java、Jsp、RDBMS、Tomcat、HTML、Linux、JDBC、SVN")]),a._v(" "),r("li",[a._v("解决扩展性的问题：Struts、Spring、SpringMVC、Hibernate、Mybatis")]),a._v(" "),r("li",[a._v("解决性能的问题：NoSQL、Java线程、Hadoop、Nginx、MQ、ElasticSearch")])]),a._v(" "),r("h3",{attrs:{id:"web1-0-时代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web1-0-时代"}},[a._v("#")]),a._v(" Web1.0 时代")]),a._v(" "),r("p",[a._v("Web1.0的时代，数据访问量很有限，用一夫当关的高性能的单点服务器可以解决大部分问题。")]),a._v(" "),r("p",[r("img",{attrs:{src:s(917),alt:"image-20221013172517393"}})]),a._v(" "),r("h3",{attrs:{id:"web2-0-时代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web2-0-时代"}},[a._v("#")]),a._v(" Web2.0 时代")]),a._v(" "),r("p",[a._v("随着Web2.0的时代的到来，用户访问量大幅度提升，同时产生了大量的用户数据。加上后来的智能移动设备的普及，所有的互联网平台都面临了巨大的性能挑战。")]),a._v(" "),r("p",[r("img",{attrs:{src:s(918),alt:"image-20221013172846608"}})]),a._v(" "),r("h3",{attrs:{id:"解决cpu及内存压力"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决cpu及内存压力"}},[a._v("#")]),a._v(" 解决CPU及内存压力")]),a._v(" "),r("p",[r("img",{attrs:{src:s(919),alt:"image-20221013172918394"}})]),a._v(" "),r("h3",{attrs:{id:"解决io压力"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决io压力"}},[a._v("#")]),a._v(" 解决IO压力")]),a._v(" "),r("p",[r("img",{attrs:{src:s(920),alt:"image-20221013172942744"}})]),a._v(" "),r("h2",{attrs:{id:"nosql-数据库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nosql-数据库"}},[a._v("#")]),a._v(" NoSQL 数据库")]),a._v(" "),r("h3",{attrs:{id:"nosql-数据库概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nosql-数据库概述"}},[a._v("#")]),a._v(" NoSQL 数据库概述")]),a._v(" "),r("p",[a._v("NoSQL(NoSQL = "),r("strong",[a._v("Not Only SQL")]),a._v(" )，意即“不仅仅是SQL”，泛指"),r("strong",[a._v("非关系型的数据库")]),a._v("。")]),a._v(" "),r("p",[a._v("NoSQL 不依赖业务逻辑方式存储，而以简单的key-value模式存储。因此大大的增加了数据库的扩展能力。")]),a._v(" "),r("ul",[r("li",[a._v("不遵循SQL标准。")]),a._v(" "),r("li",[a._v("不支持ACID。")]),a._v(" "),r("li",[a._v("远超于SQL的性能。")])]),a._v(" "),r("h3",{attrs:{id:"nosql-适用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nosql-适用场景"}},[a._v("#")]),a._v(" NoSQL 适用场景")]),a._v(" "),r("ul",[r("li",[a._v("对数据高并发的读写")]),a._v(" "),r("li",[a._v("海量数据的读写")]),a._v(" "),r("li",[a._v("对数据高可扩展性的")])]),a._v(" "),r("h3",{attrs:{id:"nosql-不适用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nosql-不适用场景"}},[a._v("#")]),a._v(" NoSQL 不适用场景")]),a._v(" "),r("ul",[r("li",[a._v("需要事务支持")]),a._v(" "),r("li",[a._v("基于sql的结构化查询存储，处理复杂的关系,需要"),r("font",{attrs:{color:"red"}},[r("strong",[a._v("即席")])]),a._v("查询。")],1),a._v(" "),r("li",[r("font",{attrs:{color:"red"}},[a._v("（用不着sql 的和用了sql也不行的情况，请考虑用NoSql）")])],1)]),a._v(" "),r("h3",{attrs:{id:"memcache"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#memcache"}},[a._v("#")]),a._v(" Memcache")]),a._v(" "),r("ul",[r("li",[a._v("很早出现的NoSql数据库")]),a._v(" "),r("li",[a._v("数据都在内存中，一般"),r("strong",[a._v("不持久化")])]),a._v(" "),r("li",[a._v("支持简单的key-value模式，"),r("strong",[a._v("支持类型单一")])]),a._v(" "),r("li",[a._v("一般是作为"),r("strong",[a._v("缓存数据库")]),a._v("辅助持久化的数据库")])]),a._v(" "),r("h3",{attrs:{id:"redis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[a._v("#")]),a._v(" Redis")]),a._v(" "),r("ul",[r("li",[a._v("几乎覆盖了Memcached的绝大部分功能")]),a._v(" "),r("li",[a._v("数据都在内存中，支持持久化，主要用作备份恢复")]),a._v(" "),r("li",[a._v("除了支持简单的key-value模式，还支持多种数据结构的存储，比如 list、set、hash、zset等。")]),a._v(" "),r("li",[a._v("一般是作为缓存数据库辅助持久化的数据库")])]),a._v(" "),r("h3",{attrs:{id:"mongodb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[a._v("#")]),a._v(" MongoDB")]),a._v(" "),r("ul",[r("li",[a._v("高性能、开源、模式自由(schema free)的"),r("strong",[a._v("文档型数据库")])]),a._v(" "),r("li",[a._v("数据都在内存中， 如果内存不足，把不常用的数据保存到硬盘")]),a._v(" "),r("li",[a._v("虽然是key-value模式，但是对value（尤其是"),r("strong",[a._v("json")]),a._v("）提供了丰富的查询功能")]),a._v(" "),r("li",[a._v("支持二进制数据及大型对象")]),a._v(" "),r("li",[a._v("可以根据数据的特点"),r("strong",[a._v("替代RDBMS")]),a._v(" ，成为独立的数据库。或者配合RDBMS，存储特定的数据。")])]),a._v(" "),r("h2",{attrs:{id:"行式存储数据库-大数据时代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#行式存储数据库-大数据时代"}},[a._v("#")]),a._v(" 行式存储数据库（大数据时代）")]),a._v(" "),r("h3",{attrs:{id:"行式数据库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#行式数据库"}},[a._v("#")]),a._v(" 行式数据库")]),a._v(" "),r("p",[r("img",{attrs:{src:s(921),alt:"image-20221017092433026"}})]),a._v(" "),r("h3",{attrs:{id:"列式数据库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#列式数据库"}},[a._v("#")]),a._v(" 列式数据库")]),a._v(" "),r("p",[r("img",{attrs:{src:s(922),alt:"image-20221017092511742"}})]),a._v(" "),r("h3",{attrs:{id:"hbase"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hbase"}},[a._v("#")]),a._v(" Hbase")]),a._v(" "),r("p",[a._v("HBase是"),r("strong",[a._v("Hadoop")]),a._v("项目中的数据库。它用于需要对大量的数据进行随机、实时的读写操作的场景中。")]),a._v(" "),r("p",[a._v("HBase的目标就是处理数据量"),r("strong",[a._v("非常庞大")]),a._v("的表，可以用"),r("strong",[a._v("普通的计算机")]),a._v("处理超过"),r("strong",[a._v("10")]),a._v("亿行数据**，还可处理有数百万**列元素的数据表。")]),a._v(" "),r("h3",{attrs:{id:"cassandra"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cassandra"}},[a._v("#")]),a._v(" Cassandra")]),a._v(" "),r("p",[a._v("Apache Cassandra是一款免费的开源NoSQL数据库，其设计目的在于管理由大量商用服务器构建起来的庞大集群上的"),r("strong",[a._v("海量数据集")]),a._v("(数据量通常达到PB级别)。在众多显著特性当中，Cassandra最为卓越的长处是对写入及读取操作进行规模调整，而且其不强调主集群的设计思路能够以相对直观的方式简化各集群的创建与扩展流程。")]),a._v(" "),r("h2",{attrs:{id:"图关系型数据库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图关系型数据库"}},[a._v("#")]),a._v(" 图关系型数据库")]),a._v(" "),r("p",[r("img",{attrs:{src:s(923),alt:"image-20221017093835306"}})]),a._v(" "),r("p",[a._v("主要应用：社会关系，公共交通网络，地图及网络拓谱(n*(n-1)/2)")]),a._v(" "),r("img",{staticStyle:{zoom:"200%"},attrs:{src:s(924)}}),a._v(" "),r("h2",{attrs:{id:"db-engines-数据库排名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#db-engines-数据库排名"}},[a._v("#")]),a._v(" DB-Engines 数据库排名")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://db-engines.com/en/ranking",target:"_blank",rel:"noopener noreferrer"}},[a._v("DB-Engines Ranking - popularity ranking of database management systems"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports},917:function(a,t,s){a.exports=s.p+"assets/img/image-20221013172517393.2d3c7dfe.png"},918:function(a,t,s){a.exports=s.p+"assets/img/image-20221013172846608.d12ee2c0.png"},919:function(a,t,s){a.exports=s.p+"assets/img/image-20221013172918394.982a1df3.png"},920:function(a,t,s){a.exports=s.p+"assets/img/image-20221013172942744.ef7ef12a.png"},921:function(a,t,s){a.exports=s.p+"assets/img/image-20221017092433026.86b5a38b.png"},922:function(a,t,s){a.exports=s.p+"assets/img/image-20221017092511742.b0740d41.png"},923:function(a,t,s){a.exports=s.p+"assets/img/image-20221017093835306.cf8c0cda.png"},924:function(a,t,s){a.exports=s.p+"assets/img/image-2022227092433026.812105ae.png"}}]);