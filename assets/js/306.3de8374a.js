(window.webpackJsonp=window.webpackJsonp||[]).push([[306],{1463:function(t,s,e){"use strict";e.r(s);var n=e(26),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"settings-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settings-文件"}},[t._v("#")]),t._v(" Settings 文件")]),t._v(" "),e("p",[t._v("首先对 settings 文件的几点说明：")]),t._v(" "),e("ol",[e("li",[t._v("作用：主要是在项目初始化阶段确定一下引入哪些工程需要加入到项目构建中,为构建项目工程树做准备。")]),t._v(" "),e("li",[t._v("工程树：gradle 中有工程树的概念，类似于 maven 中的 project 与 module。")]),t._v(" "),e("li",[t._v("内容：里面主要定义了当前 gradle 项目及子 project 的项目名称 。")]),t._v(" "),e("li",[t._v("位置：必须放在根工程目录下。")]),t._v(" "),e("li",[t._v("名字：为 settings.gradle 文件，不能发生变化。")]),t._v(" "),e("li",[t._v("对应实例：与 org.gradle.api.initialization.Settings 实例是一一对应的关系。每个项目只有一个 settings 文件。")]),t._v(" "),e("li",[t._v("关注：作为开发者我们只需要关注该文件中的 include 方法即可。使用相对路径【 : 】引入子工程。")]),t._v(" "),e("li",[t._v("一个子工程只有在 setting 文件中配置了才会被 gradle 识别，这样在构建的时候才会被包含进去 。")])]),t._v(" "),e("div",{staticClass:"language-groovy extra-class"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根工程项目名")]),t._v("\nrootProject"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//包含的子工程名称")]),t._v("\ninclude "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subject01'")]),t._v("\ninclude "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subject02'")]),t._v("\ninclude "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subject03'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//包含的子工程下的子工程名称")]),t._v("\ninclude "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subject01:subproject011'")]),t._v("\ninclude "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subject01:subproject012'")]),t._v("\n")])])]),e("p",[t._v('项目名称中 ":" 代表项目的分隔符， 类似路径中的 "/"。如果以 ":" 开头则表示相对于 root project 。然后 Gradle 会为每个带有build.gradle 脚本文件的工程构建一个与之对应的 Project 对象 。')])])}),[],!1,null,null,null);s.default=a.exports}}]);